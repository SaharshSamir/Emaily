{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","components/surveys/SurveysList.js","components/Dashboard.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/formFields.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/surveysReducer.js","index.js"],"names":["FETCH_USER","FETCH_SURVEYS","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","submitSurvey","values","history","push","fetchSurveys","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","style","margin","credits","to","renderContent","Landing","textAlign","SurveysList","surveys","reverse","map","survey","title","body","Date","dateSent","toLocaleDateString","yes","no","_id","renderSurveys","Dashboard","input","label","meta","error","touched","marginBottom","re","SurveyForm","_","formFields","Field","component","SurveyField","onSubmit","handleSubmit","onSurveySubmit","renderFields","reduxForm","validate","errors","recipients","emails","invalidEmails","replace","split","email","trim","filter","test","length","validEmails","each","form","destroyOnUnmount","state","formValues","surveyForm","withRouter","onCancel","reviewFields","onClick","SurveyNew","showFormReview","setState","App","exact","path","combineReducers","action","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a23e9d2e.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\nexport const FETCH_SURVEYS = 'fetch_surveys';\n","import axios from 'axios';\nimport { FETCH_USER, FETCH_SURVEYS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const handleToken = token => async dispatch => {\n  const res = await axios.post('/api/stripe', token);\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const submitSurvey = (values, history) => async dispatch => {\n  const res = await axios.post('/api/surveys', values);\n\n  history.push('/surveys')\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const fetchSurveys = () => async dispatch => {\n  const res = await axios.get('/api/surveys');\n\n  dispatch({ type: FETCH_SURVEYS, payload: res.data });\n};\n","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass Payments extends Component {\n  render() {\n    return (\n      <StripeCheckout\n        name=\"Emaily\"\n        description=\"$5 for 5 email credits\"\n        amount={500}\n        token={token => this.props.handleToken(token)}\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      >\n        <button className=\"btn\">\n          Add Credits\n        </button>\n      </StripeCheckout>\n    );\n  }\n}\n\nexport default connect(null, actions)(Payments);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Payments from './Payments';\n\nclass Header extends Component {\n  renderContent() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return <li><a href=\"/auth/google\">Login With Google</a></li>;\n      default:\n        return [\n          <li key=\"1\"><Payments /></li>,\n          <li key=\"3\" style={{ margin: '0 10px' }}>\n            Credits: {this.props.auth.credits}\n          </li>,\n          <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\n        ];\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link\n            to={this.props.auth ? '/surveys' : '/'}\n            className=\"left brand-logo\"\n          >\n            Emaily\n          </Link>\n          <ul className=\"right\">\n            {this.renderContent()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nconst Landing = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>\n        Emaily!\n      </h1>\n      Collect feedback form your users\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys } from '../../actions/index';\r\n\r\nclass SurveysList extends Component {\r\n    componentDidMount(){\r\n        this.props.fetchSurveys();\r\n    }\r\n\r\n    renderSurveys(){\r\n        return this.props.surveys.reverse().map(survey=> {\r\n            return (\r\n                <div className=\"darken-2 blue-grey card\" key={survey._id}>\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">{survey.title}</span>\r\n                        <p>\r\n                            {survey.body}\r\n                        </p>\r\n                        <p className=\"right\">\r\n                            Sent On: { new Date(survey.dateSent).toLocaleDateString()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <a>Yes: {survey.yes}</a>\r\n                        <a>No: {survey.no}</a>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.renderSurveys()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({surveys}){\r\n    return { surveys };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSurveys })(SurveysList);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SurveysList from './surveys/SurveysList'\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <SurveysList/>\n      <div className=\"fixed-action-btn\">\n        <Link to=\"/surveys/new\" className=\"btn-floating btn-large red\">\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","// SurveyField contains logic to render a single\n// label and text input\nimport React from 'react';\n\nexport default ({ input, label, meta: { error, touched } }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input {...input} style={{ marginBottom: '5px' }} />\n      <div className=\"red-text\" style={{ marginBottom: '20px' }}>\n        {touched && error}\n      </div>\n    </div>\n  );\n};\n","const re = \t/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\nexport default (emails) => {\n  const invalidEmails = emails\n    .replace(/(,|,\\s)$/, '')\n    .split(',')\n    .map((email) => email.trim())\n    .filter((email) => re.test(email) === false);\n\n  if (invalidEmails.length) {\n    return `These emails are invalid: ${invalidEmails}`;\n  }\n\n  return;\n};\n","export default [\r\n    { label: 'Survey Title', name: 'title' },\r\n    { label: 'Subject Line', name: 'subject' },\r\n    { label: 'Email Body', name: 'body' },\r\n    { label: 'Recipeient List', name: 'recipients' },\r\n  ];","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport SurveyField from './SurveyField';\nimport validEmails from '../../utils/validateEmails';\nimport formFields from './formFields';\n\n\nclass SurveyForm extends Component {\n  renderFields() {\n    return _.map(formFields, ({ label, name }) => {\n      return (\n        <Field\n          key={name}\n          component={SurveyField}\n          type=\"text\"\n          label={label}\n          name={name}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}\n        >\n          {this.renderFields()}\n          <Link to=\"/surveys\" className=\"red btn-flat white-text\">\n            Cancel\n          </Link>\n          <button type=\"submit\" className=\"teal btn-flat right white-text\">\n            Next\n            <i className=\"material-icons right\">done</i>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n  \n  errors.recipients = validEmails(values.recipients || '');\n\n  _.each(formFields, ({ name }) => {\n    if (!values[name]) {\n      errors[name] = 'You must provide a value';\n    }\n  });\n\n  return errors;\n}\nexport default reduxForm({\n  validate,\n  form: 'surveyForm',\n  destroyOnUnmount: false\n})(SurveyForm);\n","//SurveyFormReview shows users their inputs for review\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport formFields from './formFields';\r\nimport * as actions from '../../actions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SurveyFormReview = ({ onCancel, formValues, submitSurvey, history}) => {\r\n    const reviewFields = _.map(formFields, ({ name, label }) => {\r\n        return(\r\n            <div style={{margin: '30px'}} key={name}>\r\n                <label>{label}</label>\r\n                <div>\r\n                    {formValues[name]}\r\n                </div>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h5>Please confirm your survey</h5>\r\n            {reviewFields}\r\n            <button\r\n            className=\"yellow darken-3 white-text btn-flat\"\r\n            onClick={onCancel}>\r\n                Back\r\n            </button>\r\n            <button\r\n                onClick={() => submitSurvey(formValues, history)} \r\n                className=\"green btn-flat white-text right\"\r\n            >\r\n                Send Email\r\n                <i className=\"material-icons right \">email</i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        formValues: state.form.surveyForm.values\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));","import React, { Component } from 'react'; \nimport SurveyForm from './SurveyForm';\nimport SurveyFormReview from './SurveyFormReview';\nimport { reduxForm } from 'redux-form';\n\nclass SurveyNew extends Component {\n\n  state = {showFormReview: false}\n\n  renderContent(){\n    if(this.state.showFormReview){\n      return <SurveyFormReview \n        onCancel={ () => this.setState({showFormReview: false}) } \n      />\n    } \n\n    return <SurveyForm \n      onSurveySubmit={() => this.setState({showFormReview: true})}\n    />;\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\n\n\nexport default reduxForm({\n  form: 'surveyForm'\n})(SurveyNew);\n","\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport Header from './Header';\nimport Landing from './Landing';\nimport Dashboard from './Dashboard';\nimport SurveyNew from './surveys/SurveyNew';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/surveys\" component={Dashboard} />\n            <Route path=\"/surveys/new\" component={SurveyNew} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","import { combineReducers } from 'redux';\nimport { reducer as reduxForm } from 'redux-form';\nimport authReducer from './authReducer';\nimport surveysReducer from './surveysReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  form: reduxForm,\n  surveys: surveysReducer\n});\n","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import { FETCH_SURVEYS } from '../actions/types';\r\n\r\nexport default function (state = [], action){\r\n    switch(action.type){\r\n        case FETCH_SURVEYS:\r\n            return action.payload;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// Development only axios helpers!\nimport axios from 'axios';\nwindow.axios = axios;\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}